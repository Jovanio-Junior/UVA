#include <bits/stdc++.h>
using namespace std;

int matadj[1500][1500];
int dist[1500][1500];

int  bfs(pair<int,int> Ponto_Inicial,pair<int,int> Ponto_Final)
{

    queue<pair<int,int> > kiwi;
    //dist[inicial] = 0;
    kiwi.push(Ponto_Inicial);
    matadj[Ponto_Inicial.first][Ponto_Inicial.second]=0;
    while(!kiwi.empty())
    {
        int i=kiwi.front().first;
        int j=kiwi.front().second;
        kiwi.pop();
        if(i-1 >= 0 && matadj[i-1][j]==1e9 && matadj[i-1][j]!=-1)
        {
            matadj[i-1][j]=matadj[i][j]+1;
            kiwi.push(make_pair(i-1,j));
        }
        if(i+1 >= 0 && matadj[i+1][j]==1e9 && matadj[i+1][j]!=-1)
        {
            matadj[i+1][j]=matadj[i][j]+1;
            kiwi.push(make_pair(i+1,j));
        }
        if(j-1 >= 0 && matadj[i][j-1]==1e9 && matadj[i][j-1]!=-1)
        {
            matadj[i][j-1]=matadj[i][j]+1;
            kiwi.push(make_pair(i,j-1));
        }
        if(j+1 >= 0 && matadj[i][j+1]==1e9 && matadj[i][j+1]!=-1)
        {
            matadj[i][j+1]=matadj[i][j]+1;
            kiwi.push(make_pair(i,j+1));
        }
    }
    return matadj[Ponto_Final.first][Ponto_Final.second];

}

int main()
{
    int L,C, LB;
    while(cin >> L >> C && (L || C))
    {
        cin >> LB;
        int Linha,Bombas,Coluna;
        for(int i=0;i<L;i++)
        {
            for(int j=0;j<C;j++)
            {
                matadj[i][j]=1e9;
            }
        }
        for(int i=0;i<LB;i++)
        {
            cin >> Linha >> Bombas;
            for(int j=0; j<Bombas; j++)
            {
                cin >> Coluna;
                matadj[Linha][Coluna]=-1;
            }
        }
    //    for(int i=0;i<L;i++)
    //    {
    //        for(int j=0;j<C;j++)
    //        {
    //            cout<<matadj[i][j];
    //        }
    //    }
        pair<int,int> Ponto_Inicial,Ponto_Final;
        cin>>Ponto_Inicial.first>>Ponto_Inicial.second;
        cin>>Ponto_Final.first>>Ponto_Final.second;
        cout<<bfs(Ponto_Inicial,Ponto_Final)<<endl;
    }
}
