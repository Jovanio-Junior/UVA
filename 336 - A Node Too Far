#include <bits/stdc++.h>
using namespace std;
//int dist[1000];
map<int,int> dist;
#define INF 0x3f3f3f3f
//vector<int> adj[1000];
map<int,vector<int> > adj;

void bfs(int inicial, int tll)
{
    queue<int> kiwi;
    kiwi.push(inicial);
    dist[inicial]=0;
    while(!kiwi.empty())
    {
        int u = kiwi.front();
        kiwi.pop();
        if(!adj[u].empty())
        {
            for(int i=0;i<adj[u].size();i++)
            {
                if(dist.find(adj[u][i]) == dist.end())
                {
                    kiwi.push(adj[u][i]);
                    dist[adj[u][i]] = dist[u]+1;
                }
            }
        }
    }

}

int main()
{
    int NC;
    int p = 1;
    while(cin >> NC and NC)
    {

        int aux,aux2;
        for(int i=0; i < NC; i++)
        {
            cin >> aux >> aux2;
            adj[aux].push_back(aux2);
            adj[aux2].push_back(aux);
        }
        map<int,int> dist1;
        while(cin>>aux>>aux2 and (aux or aux2))
        {
            bfs(aux,aux2);
            dist1 = dist;
            //cout << "Case " << p << ": " <<  << "  nodes not reachable from node " << aux << " with TTL = " << aux2 << "."<<endl;
            dist.clear();

            p++;
        }
            adj.clear();

    }
}
